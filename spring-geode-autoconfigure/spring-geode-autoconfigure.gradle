plugins {
	id "io.freefair.lombok" version "5.0.0-rc2"
}

apply plugin: 'io.spring.convention.spring-module'
apply from: MAVEN_POM_EDITOR_GRADLE

description = "Spring Boot for Apache Geode Auto-Configuration"

dependencies {

	compile project(":spring-geode")

	optional project(':apache-geode-extensions')

	optional "org.springframework.boot:spring-boot-autoconfigure-processor"
	optional "org.springframework.boot:spring-boot-configuration-processor"

	optional("org.springframework.session:spring-session-data-geode") {
		exclude group: "org.apache.logging.log4j", module: "log4j-core"
	}

	testCompile "jakarta.servlet:jakarta.servlet-api"
	testCompile "junit:junit"
	testCompile "org.assertj:assertj-core"
	testCompile "org.mockito:mockito-core"
	testCompile "org.projectlombok:lombok"
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "edu.umd.cs.mtc:multithreadedtc"

	testCompile("org.springframework.data:spring-data-geode-test") {
		exclude group: "javax.servlet", module: "javax.servlet-api"
		exclude group: "org.apache.logging.log4j", module: "log4j-core"
	}

	testRuntime "javax.cache:cache-api"
	testRuntime "org.apache.geode:geode-http-service:$apacheGeodeVersion"
	testRuntime "org.apache.geode:geode-web:$apacheGeodeVersion"
	testRuntime "org.springframework.boot:spring-boot-starter-web"
	testRuntime "org.springframework.boot:spring-boot-starter-jetty"
	testRuntime "org.springframework.boot:spring-boot-starter-json"
	testRuntime "org.springframework.shell:spring-shell:$springShellVersion"

	// Runtime Test dependency on Spring Cloud Services (SCS) to verify workaround to SCS problem!
	//testRuntime("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry:2.0.3.RELEASE") {
	//	exclude group: "org.apache.logging.log4j", module: "log4j-core"
	//}
}
