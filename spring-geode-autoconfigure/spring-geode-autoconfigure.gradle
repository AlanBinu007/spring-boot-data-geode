plugins {
	id "io.freefair.lombok" version "3.2.1"
}

apply plugin: 'io.spring.convention.spring-module'

description = "Spring Boot for Apache Geode Auto-Configuration"

dependencies {

	compile project(":spring-geode")

	optional "org.springframework.boot:spring-boot-autoconfigure-processor"
	optional "org.springframework.boot:spring-boot-configuration-processor"
	optional "org.springframework.session:spring-session-data-geode"

	provided "javax.servlet:javax.servlet-api"

	testCompile project(":apache-geode-extensions")

	testCompile "org.assertj:assertj-core"
	testCompile "junit:junit"
	testCompile "org.mockito:mockito-core"
	testCompile "org.projectlombok:lombok"
	testCompile "edu.umd.cs.mtc:multithreadedtc"

	testCompile("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
	}

	testCompile "org.springframework.data:spring-data-geode-test"

	testRuntime "javax.cache:cache-api"

	testRuntime("org.springframework.boot:spring-boot-starter-web") {
		exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
	}

	testRuntime("org.springframework.boot:spring-boot-starter-jetty") {
		exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
	}

	testRuntime "org.springframework.shell:spring-shell:$springShellVersion"

	// Runtime Test dependency on Spring Cloud Services (SCS) to verify workaround to SCS problem!
	// testRuntime("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry:2.0.3.RELEASE") {
	//	exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
	// }
}
